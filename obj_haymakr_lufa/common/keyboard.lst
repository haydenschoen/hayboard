   1               		.file	"keyboard.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.keyboard_setup,"ax",@progbits
  11               	.global	keyboard_setup
  13               	keyboard_setup:
  14               	.LFB103:
  15               		.file 1 "../../tmk_core/common/keyboard.c"
   1:../../tmk_core/common/keyboard.c **** /*
   2:../../tmk_core/common/keyboard.c **** Copyright 2011,2012,2013 Jun Wako <wakojun@gmail.com>
   3:../../tmk_core/common/keyboard.c **** 
   4:../../tmk_core/common/keyboard.c **** This program is free software: you can redistribute it and/or modify
   5:../../tmk_core/common/keyboard.c **** it under the terms of the GNU General Public License as published by
   6:../../tmk_core/common/keyboard.c **** the Free Software Foundation, either version 2 of the License, or
   7:../../tmk_core/common/keyboard.c **** (at your option) any later version.
   8:../../tmk_core/common/keyboard.c **** 
   9:../../tmk_core/common/keyboard.c **** This program is distributed in the hope that it will be useful,
  10:../../tmk_core/common/keyboard.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:../../tmk_core/common/keyboard.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:../../tmk_core/common/keyboard.c **** GNU General Public License for more details.
  13:../../tmk_core/common/keyboard.c **** 
  14:../../tmk_core/common/keyboard.c **** You should have received a copy of the GNU General Public License
  15:../../tmk_core/common/keyboard.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:../../tmk_core/common/keyboard.c **** */
  17:../../tmk_core/common/keyboard.c **** #include <stdint.h>
  18:../../tmk_core/common/keyboard.c **** #include "keyboard.h"
  19:../../tmk_core/common/keyboard.c **** #include "matrix.h"
  20:../../tmk_core/common/keyboard.c **** #include "keymap.h"
  21:../../tmk_core/common/keyboard.c **** #include "host.h"
  22:../../tmk_core/common/keyboard.c **** #include "led.h"
  23:../../tmk_core/common/keyboard.c **** #include "keycode.h"
  24:../../tmk_core/common/keyboard.c **** #include "timer.h"
  25:../../tmk_core/common/keyboard.c **** #include "print.h"
  26:../../tmk_core/common/keyboard.c **** #include "debug.h"
  27:../../tmk_core/common/keyboard.c **** #include "command.h"
  28:../../tmk_core/common/keyboard.c **** #include "util.h"
  29:../../tmk_core/common/keyboard.c **** #include "sendchar.h"
  30:../../tmk_core/common/keyboard.c **** #include "bootmagic.h"
  31:../../tmk_core/common/keyboard.c **** #include "eeconfig.h"
  32:../../tmk_core/common/keyboard.c **** #include "backlight.h"
  33:../../tmk_core/common/keyboard.c **** #include "hook.h"
  34:../../tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
  35:../../tmk_core/common/keyboard.c **** #   include "mousekey.h"
  36:../../tmk_core/common/keyboard.c **** #endif
  37:../../tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  38:../../tmk_core/common/keyboard.c **** #   include "ps2_mouse.h"
  39:../../tmk_core/common/keyboard.c **** #endif
  40:../../tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  41:../../tmk_core/common/keyboard.c **** #include "serial_mouse.h"
  42:../../tmk_core/common/keyboard.c **** #endif
  43:../../tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  44:../../tmk_core/common/keyboard.c **** #include "adb.h"
  45:../../tmk_core/common/keyboard.c **** #endif
  46:../../tmk_core/common/keyboard.c **** 
  47:../../tmk_core/common/keyboard.c **** 
  48:../../tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
  49:../../tmk_core/common/keyboard.c **** static bool has_ghost_in_row(uint8_t row)
  50:../../tmk_core/common/keyboard.c **** {
  51:../../tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = matrix_get_row(row);
  52:../../tmk_core/common/keyboard.c ****     // No ghost exists when less than 2 keys are down on the row
  53:../../tmk_core/common/keyboard.c ****     if (((matrix_row - 1) & matrix_row) == 0)
  54:../../tmk_core/common/keyboard.c ****         return false;
  55:../../tmk_core/common/keyboard.c **** 
  56:../../tmk_core/common/keyboard.c ****     // Ghost occurs when the row shares column line with other row
  57:../../tmk_core/common/keyboard.c ****     for (uint8_t i=0; i < MATRIX_ROWS; i++) {
  58:../../tmk_core/common/keyboard.c ****         if (i != row && (matrix_get_row(i) & matrix_row))
  59:../../tmk_core/common/keyboard.c ****             return true;
  60:../../tmk_core/common/keyboard.c ****     }
  61:../../tmk_core/common/keyboard.c ****     return false;
  62:../../tmk_core/common/keyboard.c **** }
  63:../../tmk_core/common/keyboard.c **** #endif
  64:../../tmk_core/common/keyboard.c **** 
  65:../../tmk_core/common/keyboard.c **** 
  66:../../tmk_core/common/keyboard.c **** void keyboard_setup(void)
  67:../../tmk_core/common/keyboard.c **** {
  16               		.loc 1 67 0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  68:../../tmk_core/common/keyboard.c ****     matrix_setup();
  22               		.loc 1 68 0
  23 0000 0C94 0000 		jmp matrix_setup
  24               	.LVL0:
  25               		.cfi_endproc
  26               	.LFE103:
  28               		.section	.text.keyboard_init,"ax",@progbits
  29               	.global	keyboard_init
  31               	keyboard_init:
  32               	.LFB104:
  69:../../tmk_core/common/keyboard.c **** }
  70:../../tmk_core/common/keyboard.c **** 
  71:../../tmk_core/common/keyboard.c **** void keyboard_init(void)
  72:../../tmk_core/common/keyboard.c **** {
  33               		.loc 1 72 0
  34               		.cfi_startproc
  35               	/* prologue: function */
  36               	/* frame size = 0 */
  37               	/* stack size = 0 */
  38               	.L__stack_usage = 0
  73:../../tmk_core/common/keyboard.c ****     timer_init();
  39               		.loc 1 73 0
  40 0000 0E94 0000 		call timer_init
  41               	.LVL1:
  74:../../tmk_core/common/keyboard.c ****     matrix_init();
  42               		.loc 1 74 0
  43 0004 0E94 0000 		call matrix_init
  44               	.LVL2:
  75:../../tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  76:../../tmk_core/common/keyboard.c ****     ps2_mouse_init();
  77:../../tmk_core/common/keyboard.c **** #endif
  78:../../tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  79:../../tmk_core/common/keyboard.c ****     serial_mouse_init();
  80:../../tmk_core/common/keyboard.c **** #endif
  81:../../tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  82:../../tmk_core/common/keyboard.c ****     adb_mouse_init();
  83:../../tmk_core/common/keyboard.c **** #endif
  84:../../tmk_core/common/keyboard.c **** 
  85:../../tmk_core/common/keyboard.c **** 
  86:../../tmk_core/common/keyboard.c **** #ifdef BOOTMAGIC_ENABLE
  87:../../tmk_core/common/keyboard.c ****     bootmagic();
  45               		.loc 1 87 0
  46 0008 0C94 0000 		jmp bootmagic
  47               	.LVL3:
  48               		.cfi_endproc
  49               	.LFE104:
  51               		.section	.text.keyboard_task,"ax",@progbits
  52               	.global	keyboard_task
  54               	keyboard_task:
  55               	.LFB105:
  88:../../tmk_core/common/keyboard.c **** #endif
  89:../../tmk_core/common/keyboard.c **** 
  90:../../tmk_core/common/keyboard.c **** #ifdef BACKLIGHT_ENABLE
  91:../../tmk_core/common/keyboard.c ****     backlight_init();
  92:../../tmk_core/common/keyboard.c **** #endif
  93:../../tmk_core/common/keyboard.c **** }
  94:../../tmk_core/common/keyboard.c **** 
  95:../../tmk_core/common/keyboard.c **** /*
  96:../../tmk_core/common/keyboard.c ****  * Do keyboard routine jobs: scan mantrix, light LEDs, ...
  97:../../tmk_core/common/keyboard.c ****  * This is repeatedly called as fast as possible.
  98:../../tmk_core/common/keyboard.c ****  */
  99:../../tmk_core/common/keyboard.c **** void keyboard_task(void)
 100:../../tmk_core/common/keyboard.c **** {
  56               		.loc 1 100 0
  57               		.cfi_startproc
  58 0000 5F92      		push r5
  59               	.LCFI0:
  60               		.cfi_def_cfa_offset 3
  61               		.cfi_offset 5, -2
  62 0002 6F92      		push r6
  63               	.LCFI1:
  64               		.cfi_def_cfa_offset 4
  65               		.cfi_offset 6, -3
  66 0004 7F92      		push r7
  67               	.LCFI2:
  68               		.cfi_def_cfa_offset 5
  69               		.cfi_offset 7, -4
  70 0006 8F92      		push r8
  71               	.LCFI3:
  72               		.cfi_def_cfa_offset 6
  73               		.cfi_offset 8, -5
  74 0008 9F92      		push r9
  75               	.LCFI4:
  76               		.cfi_def_cfa_offset 7
  77               		.cfi_offset 9, -6
  78 000a AF92      		push r10
  79               	.LCFI5:
  80               		.cfi_def_cfa_offset 8
  81               		.cfi_offset 10, -7
  82 000c BF92      		push r11
  83               	.LCFI6:
  84               		.cfi_def_cfa_offset 9
  85               		.cfi_offset 11, -8
  86 000e CF92      		push r12
  87               	.LCFI7:
  88               		.cfi_def_cfa_offset 10
  89               		.cfi_offset 12, -9
  90 0010 DF92      		push r13
  91               	.LCFI8:
  92               		.cfi_def_cfa_offset 11
  93               		.cfi_offset 13, -10
  94 0012 EF92      		push r14
  95               	.LCFI9:
  96               		.cfi_def_cfa_offset 12
  97               		.cfi_offset 14, -11
  98 0014 FF92      		push r15
  99               	.LCFI10:
 100               		.cfi_def_cfa_offset 13
 101               		.cfi_offset 15, -12
 102 0016 0F93      		push r16
 103               	.LCFI11:
 104               		.cfi_def_cfa_offset 14
 105               		.cfi_offset 16, -13
 106 0018 1F93      		push r17
 107               	.LCFI12:
 108               		.cfi_def_cfa_offset 15
 109               		.cfi_offset 17, -14
 110 001a CF93      		push r28
 111               	.LCFI13:
 112               		.cfi_def_cfa_offset 16
 113               		.cfi_offset 28, -15
 114 001c DF93      		push r29
 115               	.LCFI14:
 116               		.cfi_def_cfa_offset 17
 117               		.cfi_offset 29, -16
 118 001e 00D0      		rcall .
 119 0020 00D0      		rcall .
 120 0022 1F92      		push __zero_reg__
 121               	.LCFI15:
 122               		.cfi_def_cfa_offset 22
 123 0024 CDB7      		in r28,__SP_L__
 124 0026 DEB7      		in r29,__SP_H__
 125               	.LCFI16:
 126               		.cfi_def_cfa_register 28
 127               	/* prologue: function */
 128               	/* frame size = 5 */
 129               	/* stack size = 20 */
 130               	.L__stack_usage = 20
 131               	.LVL4:
 101:../../tmk_core/common/keyboard.c ****     static matrix_row_t matrix_prev[MATRIX_ROWS];
 102:../../tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 103:../../tmk_core/common/keyboard.c ****     static matrix_row_t matrix_ghost[MATRIX_ROWS];
 104:../../tmk_core/common/keyboard.c **** #endif
 105:../../tmk_core/common/keyboard.c ****     static uint8_t led_status = 0;
 106:../../tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = 0;
 107:../../tmk_core/common/keyboard.c ****     matrix_row_t matrix_change = 0;
 108:../../tmk_core/common/keyboard.c **** 
 109:../../tmk_core/common/keyboard.c ****     matrix_scan();
 132               		.loc 1 109 0
 133 0028 0E94 0000 		call matrix_scan
 134               	.LVL5:
 135 002c 00E0      		ldi r16,lo8(matrix_prev.4870)
 136 002e 10E0      		ldi r17,hi8(matrix_prev.4870)
 137               	.LBB2:
 110:../../tmk_core/common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 138               		.loc 1 110 0
 139 0030 512C      		mov r5,__zero_reg__
 140               	.LBB3:
 111:../../tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 112:../../tmk_core/common/keyboard.c ****         matrix_change = matrix_row ^ matrix_prev[r];
 113:../../tmk_core/common/keyboard.c ****         if (matrix_change) {
 114:../../tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 115:../../tmk_core/common/keyboard.c ****             if (has_ghost_in_row(r)) {
 116:../../tmk_core/common/keyboard.c ****                 /* Keep track of whether ghosted status has changed for
 117:../../tmk_core/common/keyboard.c ****                  * debugging. But don't update matrix_prev until un-ghosted, or
 118:../../tmk_core/common/keyboard.c ****                  * the last key would be lost.
 119:../../tmk_core/common/keyboard.c ****                  */
 120:../../tmk_core/common/keyboard.c ****                 if (debug_matrix && matrix_ghost[r] != matrix_row) {
 121:../../tmk_core/common/keyboard.c ****                     matrix_print();
 122:../../tmk_core/common/keyboard.c ****                 }
 123:../../tmk_core/common/keyboard.c ****                 matrix_ghost[r] = matrix_row;
 124:../../tmk_core/common/keyboard.c ****                 continue;
 125:../../tmk_core/common/keyboard.c ****             }
 126:../../tmk_core/common/keyboard.c ****             matrix_ghost[r] = matrix_row;
 127:../../tmk_core/common/keyboard.c **** #endif
 128:../../tmk_core/common/keyboard.c ****             if (debug_matrix) matrix_print();
 129:../../tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 130:../../tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 141               		.loc 1 130 0
 142 0032 6624      		clr r6
 143 0034 6394      		inc r6
 144 0036 712C      		mov r7,__zero_reg__
 145               	.LVL6:
 146               	.L9:
 147               	.LBE3:
 111:../../tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 148               		.loc 1 111 0
 149 0038 852D      		mov r24,r5
 150 003a 0E94 0000 		call matrix_get_row
 151               	.LVL7:
 152 003e 5C01      		movw r10,r24
 153               	.LVL8:
 112:../../tmk_core/common/keyboard.c ****         if (matrix_change) {
 154               		.loc 1 112 0
 155 0040 F801      		movw r30,r16
 156 0042 C080      		ld r12,Z
 157 0044 D180      		ldd r13,Z+1
 158               	.LVL9:
 113:../../tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 159               		.loc 1 113 0
 160 0046 C816      		cp r12,r24
 161 0048 D906      		cpc r13,r25
 162 004a 01F4      		brne .+2
 163 004c 00C0      		rjmp .L4
 128:../../tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 164               		.loc 1 128 0
 165 004e 8091 0000 		lds r24,debug_config
 166 0052 81FD      		sbrc r24,1
 128:../../tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 167               		.loc 1 128 0 is_stmt 0 discriminator 1
 168 0054 0E94 0000 		call matrix_print
 169               	.LVL10:
 170               	.L5:
 110:../../tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 171               		.loc 1 110 0 is_stmt 1
 172 0058 F12C      		mov r15,__zero_reg__
 173 005a E12C      		mov r14,__zero_reg__
 112:../../tmk_core/common/keyboard.c ****         if (matrix_change) {
 174               		.loc 1 112 0
 175 005c CA24      		eor r12,r10
 176               	.LVL11:
 177 005e DB24      		eor r13,r11
 178               	.L8:
 179               	.LVL12:
 180               	.LBB5:
 181               		.loc 1 130 0
 182 0060 4301      		movw r8,r6
 183 0062 0E2C      		mov r0,r14
 184 0064 00C0      		rjmp 2f
 185               		1:
 186 0066 880C      		lsl r8
 187 0068 991C      		rol r9
 188               		2:
 189 006a 0A94      		dec r0
 190 006c 02F4      		brpl 1b
 191 006e C601      		movw r24,r12
 192 0070 8821      		and r24,r8
 193 0072 9921      		and r25,r9
 194 0074 892B      		or r24,r25
 195 0076 01F0      		breq .L6
 196               	.LBB4:
 131:../../tmk_core/common/keyboard.c ****                     keyevent_t e = (keyevent_t){
 197               		.loc 1 131 0
 198 0078 E982      		std Y+1,r14
 199 007a 5A82      		std Y+2,r5
 132:../../tmk_core/common/keyboard.c ****                         .key = (keypos_t){ .row = r, .col = c },
 133:../../tmk_core/common/keyboard.c ****                         .pressed = (matrix_row & ((matrix_row_t)1<<c)),
 200               		.loc 1 133 0
 201 007c 21E0      		ldi r18,lo8(1)
 202 007e C401      		movw r24,r8
 203 0080 8A21      		and r24,r10
 204 0082 9B21      		and r25,r11
 205 0084 892B      		or r24,r25
 206 0086 01F4      		brne .L7
 207 0088 20E0      		ldi r18,0
 208               	.L7:
 131:../../tmk_core/common/keyboard.c ****                     keyevent_t e = (keyevent_t){
 209               		.loc 1 131 0
 210 008a 2B83      		std Y+3,r18
 134:../../tmk_core/common/keyboard.c ****                         .time = (timer_read() | 1) /* time should not be 0 */
 211               		.loc 1 134 0
 212 008c 0E94 0000 		call timer_read
 213               	.LVL13:
 214 0090 8160      		ori r24,1
 131:../../tmk_core/common/keyboard.c ****                     keyevent_t e = (keyevent_t){
 215               		.loc 1 131 0
 216 0092 782F      		mov r23,r24
 217 0094 9D83      		std Y+5,r25
 218 0096 8C83      		std Y+4,r24
 135:../../tmk_core/common/keyboard.c ****                     };
 136:../../tmk_core/common/keyboard.c ****                     action_exec(e);
 219               		.loc 1 136 0
 220 0098 4981      		ldd r20,Y+1
 221 009a 5A81      		ldd r21,Y+2
 222 009c 6B81      		ldd r22,Y+3
 223 009e 8D81      		ldd r24,Y+5
 224 00a0 0E94 0000 		call action_exec
 225               	.LVL14:
 137:../../tmk_core/common/keyboard.c ****                     hook_matrix_change(e);
 226               		.loc 1 137 0
 227 00a4 4981      		ldd r20,Y+1
 228 00a6 5A81      		ldd r21,Y+2
 229 00a8 6B81      		ldd r22,Y+3
 230 00aa 7C81      		ldd r23,Y+4
 231 00ac 8D81      		ldd r24,Y+5
 232 00ae 0E94 0000 		call hook_matrix_change
 233               	.LVL15:
 138:../../tmk_core/common/keyboard.c ****                     // record a processed key
 139:../../tmk_core/common/keyboard.c ****                     matrix_prev[r] ^= ((matrix_row_t)1<<c);
 234               		.loc 1 139 0
 235 00b2 F801      		movw r30,r16
 236 00b4 8081      		ld r24,Z
 237 00b6 9181      		ldd r25,Z+1
 238 00b8 8826      		eor r8,r24
 239 00ba 9926      		eor r9,r25
 240 00bc 9182      		std Z+1,r9
 241 00be 8082      		st Z,r8
 242               	.L6:
 243               	.LVL16:
 244 00c0 FFEF      		ldi r31,-1
 245 00c2 EF1A      		sub r14,r31
 246 00c4 FF0A      		sbc r15,r31
 247               	.LVL17:
 248               	.LBE4:
 129:../../tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 249               		.loc 1 129 0 discriminator 2
 250 00c6 8FE0      		ldi r24,15
 251 00c8 E816      		cp r14,r24
 252 00ca F104      		cpc r15,__zero_reg__
 253 00cc 01F4      		brne .L8
 254               	.LVL18:
 255               	.L4:
 256               	.LBE5:
 110:../../tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 257               		.loc 1 110 0
 258 00ce 5394      		inc r5
 259               	.LVL19:
 260 00d0 0E5F      		subi r16,-2
 261 00d2 1F4F      		sbci r17,-1
 262 00d4 E5E0      		ldi r30,lo8(5)
 263 00d6 5E12      		cpse r5,r30
 264 00d8 00C0      		rjmp .L9
 265               	.LBE2:
 140:../../tmk_core/common/keyboard.c **** 
 141:../../tmk_core/common/keyboard.c ****                     // This can miss stroke when scan matrix takes long like Topre
 142:../../tmk_core/common/keyboard.c ****                     // process a key per task call
 143:../../tmk_core/common/keyboard.c ****                     //goto MATRIX_LOOP_END;
 144:../../tmk_core/common/keyboard.c ****                 }
 145:../../tmk_core/common/keyboard.c ****             }
 146:../../tmk_core/common/keyboard.c ****         }
 147:../../tmk_core/common/keyboard.c ****     }
 148:../../tmk_core/common/keyboard.c ****     // call with pseudo tick event when no real key event.
 149:../../tmk_core/common/keyboard.c ****     action_exec(TICK);
 266               		.loc 1 149 0
 267 00da 8FEF      		ldi r24,lo8(-1)
 268 00dc 8983      		std Y+1,r24
 269 00de 8A83      		std Y+2,r24
 270 00e0 1B82      		std Y+3,__zero_reg__
 271 00e2 0E94 0000 		call timer_read
 272               	.LVL20:
 273 00e6 8160      		ori r24,1
 274 00e8 782F      		mov r23,r24
 275 00ea 9D83      		std Y+5,r25
 276 00ec 8C83      		std Y+4,r24
 277 00ee 4981      		ldd r20,Y+1
 278 00f0 5A81      		ldd r21,Y+2
 279 00f2 6B81      		ldd r22,Y+3
 280 00f4 8D81      		ldd r24,Y+5
 281 00f6 0E94 0000 		call action_exec
 282               	.LVL21:
 283               	.LDL1:
 150:../../tmk_core/common/keyboard.c **** 
 151:../../tmk_core/common/keyboard.c **** MATRIX_LOOP_END:
 152:../../tmk_core/common/keyboard.c **** 
 153:../../tmk_core/common/keyboard.c ****     hook_keyboard_loop();
 284               		.loc 1 153 0
 285 00fa 0E94 0000 		call hook_keyboard_loop
 286               	.LVL22:
 154:../../tmk_core/common/keyboard.c **** 
 155:../../tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
 156:../../tmk_core/common/keyboard.c ****     // mousekey repeat & acceleration
 157:../../tmk_core/common/keyboard.c ****     mousekey_task();
 287               		.loc 1 157 0
 288 00fe 0E94 0000 		call mousekey_task
 289               	.LVL23:
 158:../../tmk_core/common/keyboard.c **** #endif
 159:../../tmk_core/common/keyboard.c **** 
 160:../../tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
 161:../../tmk_core/common/keyboard.c ****     ps2_mouse_task();
 162:../../tmk_core/common/keyboard.c **** #endif
 163:../../tmk_core/common/keyboard.c **** 
 164:../../tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
 165:../../tmk_core/common/keyboard.c ****         serial_mouse_task();
 166:../../tmk_core/common/keyboard.c **** #endif
 167:../../tmk_core/common/keyboard.c **** 
 168:../../tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
 169:../../tmk_core/common/keyboard.c ****         adb_mouse_task();
 170:../../tmk_core/common/keyboard.c **** #endif
 171:../../tmk_core/common/keyboard.c **** 
 172:../../tmk_core/common/keyboard.c ****     // update LED
 173:../../tmk_core/common/keyboard.c ****     if (led_status != host_keyboard_leds()) {
 290               		.loc 1 173 0
 291 0102 0E94 0000 		call host_keyboard_leds
 292               	.LVL24:
 293 0106 9091 0000 		lds r25,led_status.4871
 294 010a 8917      		cp r24,r25
 295 010c 01F0      		breq .L3
 174:../../tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 296               		.loc 1 174 0
 297 010e 0E94 0000 		call host_keyboard_leds
 298               	.LVL25:
 299 0112 8093 0000 		sts led_status.4871,r24
 175:../../tmk_core/common/keyboard.c ****         if (debug_keyboard) dprintf("LED: %02X\n", led_status);
 300               		.loc 1 175 0
 301 0116 9091 0000 		lds r25,debug_config
 302 011a 9570      		andi r25,lo8(5)
 303 011c 9530      		cpi r25,lo8(5)
 304 011e 01F4      		brne .L11
 305               		.loc 1 175 0 is_stmt 0 discriminator 2
 306 0120 1F92      		push __zero_reg__
 307 0122 8F93      		push r24
 308 0124 80E0      		ldi r24,lo8(__c.4888)
 309 0126 90E0      		ldi r25,hi8(__c.4888)
 310 0128 9F93      		push r25
 311 012a 8F93      		push r24
 312 012c 0E94 0000 		call __xprintf
 313               	.LVL26:
 314 0130 0F90      		pop __tmp_reg__
 315 0132 0F90      		pop __tmp_reg__
 316 0134 0F90      		pop __tmp_reg__
 317 0136 0F90      		pop __tmp_reg__
 318               	.L11:
 176:../../tmk_core/common/keyboard.c ****         hook_keyboard_leds_change(led_status);
 319               		.loc 1 176 0 is_stmt 1
 320 0138 8091 0000 		lds r24,led_status.4871
 321               	/* epilogue start */
 177:../../tmk_core/common/keyboard.c ****     }
 178:../../tmk_core/common/keyboard.c **** }
 322               		.loc 1 178 0
 323 013c 0F90      		pop __tmp_reg__
 324 013e 0F90      		pop __tmp_reg__
 325 0140 0F90      		pop __tmp_reg__
 326 0142 0F90      		pop __tmp_reg__
 327 0144 0F90      		pop __tmp_reg__
 328 0146 DF91      		pop r29
 329 0148 CF91      		pop r28
 330 014a 1F91      		pop r17
 331 014c 0F91      		pop r16
 332 014e FF90      		pop r15
 333 0150 EF90      		pop r14
 334 0152 DF90      		pop r13
 335 0154 CF90      		pop r12
 336 0156 BF90      		pop r11
 337 0158 AF90      		pop r10
 338               	.LVL27:
 339 015a 9F90      		pop r9
 340 015c 8F90      		pop r8
 341 015e 7F90      		pop r7
 342 0160 6F90      		pop r6
 343 0162 5F90      		pop r5
 344               	.LVL28:
 176:../../tmk_core/common/keyboard.c ****         hook_keyboard_leds_change(led_status);
 345               		.loc 1 176 0
 346 0164 0C94 0000 		jmp hook_keyboard_leds_change
 347               	.LVL29:
 348               	.L3:
 349               	/* epilogue start */
 350               		.loc 1 178 0
 351 0168 0F90      		pop __tmp_reg__
 352 016a 0F90      		pop __tmp_reg__
 353 016c 0F90      		pop __tmp_reg__
 354 016e 0F90      		pop __tmp_reg__
 355 0170 0F90      		pop __tmp_reg__
 356 0172 DF91      		pop r29
 357 0174 CF91      		pop r28
 358 0176 1F91      		pop r17
 359 0178 0F91      		pop r16
 360 017a FF90      		pop r15
 361 017c EF90      		pop r14
 362 017e DF90      		pop r13
 363 0180 CF90      		pop r12
 364 0182 BF90      		pop r11
 365 0184 AF90      		pop r10
 366               	.LVL30:
 367 0186 9F90      		pop r9
 368 0188 8F90      		pop r8
 369 018a 7F90      		pop r7
 370 018c 6F90      		pop r6
 371 018e 5F90      		pop r5
 372               	.LVL31:
 373 0190 0895      		ret
 374               		.cfi_endproc
 375               	.LFE105:
 377               		.section	.text.keyboard_set_leds,"ax",@progbits
 378               	.global	keyboard_set_leds
 380               	keyboard_set_leds:
 381               	.LFB106:
 179:../../tmk_core/common/keyboard.c **** 
 180:../../tmk_core/common/keyboard.c **** void keyboard_set_leds(uint8_t leds)
 181:../../tmk_core/common/keyboard.c **** {
 382               		.loc 1 181 0
 383               		.cfi_startproc
 384               	.LVL32:
 385               	/* prologue: function */
 386               	/* frame size = 0 */
 387               	/* stack size = 0 */
 388               	.L__stack_usage = 0
 182:../../tmk_core/common/keyboard.c ****     led_set(leds);
 389               		.loc 1 182 0
 390 0000 0C94 0000 		jmp led_set
 391               	.LVL33:
 392               		.cfi_endproc
 393               	.LFE106:
 395               		.section	.progmem.data.__c.4888,"a",@progbits
 398               	__c.4888:
 399 0000 4C45 443A 		.string	"LED: %02X\n"
 399      2025 3032 
 399      580A 00
 400               		.section	.bss.led_status.4871,"aw",@nobits
 403               	led_status.4871:
 404 0000 00        		.zero	1
 405               		.section	.bss.matrix_prev.4870,"aw",@nobits
 408               	matrix_prev.4870:
 409 0000 0000 0000 		.zero	10
 409      0000 0000 
 409      0000 
 410               		.text
 411               	.Letext0:
 412               		.file 2 "/usr/local/Cellar/avr-gcc/7.2.0/avr/include/stdint.h"
 413               		.file 3 "../../tmk_core/common/keyboard.h"
 414               		.file 4 "../../tmk_core/common/matrix.h"
 415               		.file 5 "../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../StdRequestType.h"
 416               		.file 6 "../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../DeviceStandardReq.h"
 417               		.file 7 "../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/USBTask.h"
 418               		.file 8 "../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/HostStandardReq.h"
 419               		.file 9 "/usr/local/Cellar/avr-gcc/7.2.0/avr/include/stdio.h"
 420               		.file 10 "../../tmk_core/common/host.h"
 421               		.file 11 "../../tmk_core/common/timer.h"
 422               		.file 12 "../../tmk_core/common/avr/xprintf.h"
 423               		.file 13 "../../tmk_core/common/debug.h"
 424               		.file 14 "../../tmk_core/common/command.h"
 425               		.file 15 "../../tmk_core/common/mousekey.h"
 426               		.file 16 "../../tmk_core/common/led.h"
 427               		.file 17 "../../tmk_core/common/action.h"
 428               		.file 18 "../../tmk_core/common/hook.h"
 429               		.file 19 "../../tmk_core/common/bootmagic.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 keyboard.c
/var/folders/0t/kvl6kk9d4s327fss_3zj34vc3_bfct/T//cc7NMMtA.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/0t/kvl6kk9d4s327fss_3zj34vc3_bfct/T//cc7NMMtA.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/0t/kvl6kk9d4s327fss_3zj34vc3_bfct/T//cc7NMMtA.s:4      *ABS*:000000000000003f __SREG__
/var/folders/0t/kvl6kk9d4s327fss_3zj34vc3_bfct/T//cc7NMMtA.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/0t/kvl6kk9d4s327fss_3zj34vc3_bfct/T//cc7NMMtA.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/0t/kvl6kk9d4s327fss_3zj34vc3_bfct/T//cc7NMMtA.s:13     .text.keyboard_setup:0000000000000000 keyboard_setup
/var/folders/0t/kvl6kk9d4s327fss_3zj34vc3_bfct/T//cc7NMMtA.s:31     .text.keyboard_init:0000000000000000 keyboard_init
/var/folders/0t/kvl6kk9d4s327fss_3zj34vc3_bfct/T//cc7NMMtA.s:54     .text.keyboard_task:0000000000000000 keyboard_task
/var/folders/0t/kvl6kk9d4s327fss_3zj34vc3_bfct/T//cc7NMMtA.s:408    .bss.matrix_prev.4870:0000000000000000 matrix_prev.4870
/var/folders/0t/kvl6kk9d4s327fss_3zj34vc3_bfct/T//cc7NMMtA.s:403    .bss.led_status.4871:0000000000000000 led_status.4871
/var/folders/0t/kvl6kk9d4s327fss_3zj34vc3_bfct/T//cc7NMMtA.s:398    .progmem.data.__c.4888:0000000000000000 __c.4888
/var/folders/0t/kvl6kk9d4s327fss_3zj34vc3_bfct/T//cc7NMMtA.s:380    .text.keyboard_set_leds:0000000000000000 keyboard_set_leds

UNDEFINED SYMBOLS
matrix_setup
timer_init
matrix_init
bootmagic
matrix_scan
matrix_get_row
debug_config
matrix_print
timer_read
action_exec
hook_matrix_change
hook_keyboard_loop
mousekey_task
host_keyboard_leds
__xprintf
hook_keyboard_leds_change
led_set
__do_clear_bss
